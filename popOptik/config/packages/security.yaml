security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  providers:
    # Utilisation de la classe User en base, chercher par email
    app_user_provider:
      entity:
        class: App\Entity\User
        # property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider

      # Formulaire d’authentification (à générer avec make:auth)
      #   custom_authenticators:
      #     - App\Security\LoginFormAuthenticator

      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route
      form_login:
        login_path: app_login
        check_path: app_login
        enable_csrf: true

  access_control:
    # Protéger /cart pour les utilisateurs connectés uniquement
    - { path: ^/cart, roles: ROLE_USER }
    # Exemple, protéger /profile aussi
    - { path: ^/profile, roles: ROLE_USER }
    # Protéger /admin pour les admins connectés uniquement
    - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4
        time_cost: 3
        memory_cost: 10
    access_control:
      - { path: ^/cart, roles: ROLE_USER }
